"""Initial migration

Revision ID: 8a45fd57e4fa
Revises: 
Create Date: 2025-03-11 11:24:06.876597

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8a45fd57e4fa'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('game_states',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('player_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('empire_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('turn', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('difficulty', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('game_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='game_states_pkey')
    )
    op.create_table('games',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('player_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('empire_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('difficulty', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('galaxy_size', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('turn', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='games_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('empires',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('game_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_player', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('color', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('credits', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('research_points', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('research_levels', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name='empires_game_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='empires_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('galaxies',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('game_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('size', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('explored_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name='galaxies_game_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='galaxies_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('star_systems',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('galaxy_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('position_x', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('position_y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('explored', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('discovery_level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['galaxy_id'], ['galaxies.id'], name='star_systems_galaxy_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='star_systems_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('planets',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('system_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('colonized', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('owner', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('empire_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['empire_id'], ['empires.id'], name='planets_empire_id_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['system_id'], ['star_systems.id'], name='planets_system_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='planets_pkey')
    )
    op.create_table('planet_resources',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('planet_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('organic', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mineral', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('energy', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('exotics', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['planet_id'], ['planets.id'], name='planet_resources_planet_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='planet_resources_pkey')
    )
    op.create_table('player_resources',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('game_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('organic', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mineral', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('energy', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('exotics', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('credits', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('research', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name='player_resources_game_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='player_resources_pkey')
    )
    op.create_table('empire_systems',
    sa.Column('empire_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('system_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['empire_id'], ['empires.id'], name='empire_systems_empire_id_fkey'),
    sa.ForeignKeyConstraint(['system_id'], ['star_systems.id'], name='empire_systems_system_id_fkey')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('empire_systems')
    op.drop_table('player_resources')
    op.drop_table('planet_resources')
    op.drop_table('planets')
    op.drop_table('star_systems')
    op.drop_table('galaxies')
    op.drop_table('empires')
    op.drop_table('games')
    op.drop_table('game_states')
    # ### end Alembic commands ###
