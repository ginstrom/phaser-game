# Generated by Django 5.1.7 on 2025-03-21 06:15

import celestial.models
import core.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("play", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Star",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "star_type",
                    models.CharField(
                        choices=[
                            ("blue", "Blue"),
                            ("white", "White"),
                            ("yellow", "Yellow"),
                            ("orange", "Orange"),
                            ("brown", "Brown"),
                        ],
                        help_text="The type of star",
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="System",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("x", models.IntegerField(help_text="X coordinate in the galaxy")),
                ("y", models.IntegerField(help_text="Y coordinate in the galaxy")),
                (
                    "game",
                    models.ForeignKey(
                        blank=True,
                        help_text="The game this system belongs to",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="systems",
                        to="play.game",
                    ),
                ),
                (
                    "star",
                    models.OneToOneField(
                        help_text="The star at the center of this system",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="system",
                        to="celestial.star",
                    ),
                ),
            ],
            options={
                "unique_together": {("game", "x", "y")},
            },
        ),
        migrations.CreateModel(
            name="Planet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mineral_production",
                    core.fields.FixedPointField(
                        default=50, help_text="Base mineral production per turn"
                    ),
                ),
                (
                    "organic_production",
                    core.fields.FixedPointField(
                        default=50, help_text="Base organic production per turn"
                    ),
                ),
                (
                    "radioactive_production",
                    core.fields.FixedPointField(
                        default=50, help_text="Base radioactive production per turn"
                    ),
                ),
                (
                    "exotic_production",
                    core.fields.FixedPointField(
                        default=50, help_text="Base exotic production per turn"
                    ),
                ),
                (
                    "mineral_storage_capacity",
                    core.fields.FixedPointField(
                        default=100, help_text="Maximum mineral storage capacity"
                    ),
                ),
                (
                    "organic_storage_capacity",
                    core.fields.FixedPointField(
                        default=100, help_text="Maximum organic storage capacity"
                    ),
                ),
                (
                    "radioactive_storage_capacity",
                    core.fields.FixedPointField(
                        default=100, help_text="Maximum radioactive storage capacity"
                    ),
                ),
                (
                    "exotic_storage_capacity",
                    core.fields.FixedPointField(
                        default=100, help_text="Maximum exotic storage capacity"
                    ),
                ),
                (
                    "orbit",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="The orbital position from the star (1 being closest)",
                        validators=[celestial.models.validate_positive_orbit],
                    ),
                ),
                (
                    "empire",
                    models.ForeignKey(
                        blank=True,
                        help_text="The empire that owns this planet",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_planets",
                        to="play.empire",
                    ),
                ),
                (
                    "system",
                    models.ForeignKey(
                        blank=True,
                        help_text="The system this planet belongs to",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="planets",
                        to="celestial.system",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AsteroidBelt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mineral_production",
                    core.fields.FixedPointField(
                        default=50, help_text="Base mineral production per turn"
                    ),
                ),
                (
                    "organic_production",
                    core.fields.FixedPointField(
                        default=50, help_text="Base organic production per turn"
                    ),
                ),
                (
                    "radioactive_production",
                    core.fields.FixedPointField(
                        default=50, help_text="Base radioactive production per turn"
                    ),
                ),
                (
                    "exotic_production",
                    core.fields.FixedPointField(
                        default=50, help_text="Base exotic production per turn"
                    ),
                ),
                (
                    "orbit",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="The orbital position from the star (1 being closest)",
                        validators=[celestial.models.validate_positive_orbit],
                    ),
                ),
                (
                    "empire",
                    models.ForeignKey(
                        blank=True,
                        help_text="The empire that owns this asteroid belt",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_asteroid_belts",
                        to="play.empire",
                    ),
                ),
                (
                    "system",
                    models.ForeignKey(
                        blank=True,
                        help_text="The system this asteroid belt belongs to",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asteroid_belts",
                        to="celestial.system",
                    ),
                ),
            ],
        ),
    ]
