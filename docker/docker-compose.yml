version: '3.8'

services:
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ../frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - API_URL=http://backend:8000
    depends_on:
      - backend
    command: npm start

  frontend-shell:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
    command: /bin/bash

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
    environment:
      - DJANGO_SETTINGS_MODULE=spacegame.settings
      - DEBUG=1
      - POSTGRES_DB=spacegame
      - POSTGRES_USER=spacegame
      - POSTGRES_PASSWORD=spacegame
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py runserver 0.0.0.0:8000

  backend-shell:
    build:
      context: ../backend
      dockerfile: Dockerfile
    volumes:
      - ../backend:/app
    environment:
      - DJANGO_SETTINGS_MODULE=spacegame.settings
      - DEBUG=1
      - POSTGRES_DB=spacegame
      - POSTGRES_USER=spacegame
      - POSTGRES_PASSWORD=spacegame
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy
    command: /bin/bash

  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=spacegame
      - POSTGRES_USER=spacegame
      - POSTGRES_PASSWORD=spacegame
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spacegame"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
  frontend_node_modules: 