version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend
    command: npm test src/__tests__/index.test.ts -- --watchAll=false --verbose
    environment:
      - CI=true
      - NODE_ENV=test

  frontend-watch:
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend
    command: npm test
    environment:
      - NODE_ENV=test

  frontend-coverage:
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend
    command: npm test -- --coverage --watchAll=false
    environment:
      - CI=true
      - NODE_ENV=test

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    working_dir: /backend
    command: python -m pytest
    volumes:
      - ./backend:/backend
      - ./config:/config
    environment:
      - ENVIRONMENT=test
      - PYTHONPATH=/backend

  backend-verbose:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    working_dir: /backend
    command: python -m pytest -v
    volumes:
      - ./backend:/backend
      - ./config:/config
    environment:
      - ENVIRONMENT=test
      - PYTHONPATH=/backend

  backend-coverage:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    working_dir: /backend
    command: python -m pytest --cov=app
    volumes:
      - ./backend:/backend
      - ./config:/config
    environment:
      - ENVIRONMENT=test
      - PYTHONPATH=/backend

  backend-api:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    working_dir: /backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
      - ./config:/config
    environment:
      - ENVIRONMENT=test
      - PYTHONPATH=/backend
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/phaser_game_test_db
    depends_on:
      db:
        condition: service_started

  cli:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    working_dir: /backend
    volumes:
      - ./backend:/backend
      - ./config:/config
    environment:
      - ENVIRONMENT=test
      - PYTHONPATH=/backend
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/phaser_game_test_db
      - API_URL=http://backend-api:8000/api/v1
    depends_on:
      backend-api:
        condition: service_started
      db:
        condition: service_started
    stdin_open: true
    tty: true
    entrypoint: ["python", "cli.py"]

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=phaser_game_test_db
